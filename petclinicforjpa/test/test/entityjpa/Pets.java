package test.entityjpa;

// Generated 2008-5-10 12:53:16 by Hibernate Tools 3.2.1.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Pets generated by hbm2java
 */
@Entity
@Table(name = "PETS")
public class Pets implements java.io.Serializable {

	private int id;
	private Types types;
	private Owners owners;
	private String name;
	private Date birthDate;
	private Set<Visits> visitses = new HashSet<Visits>(0);

	public Pets() {
	}

	public Pets(int id, Types types, Owners owners) {
		this.id = id;
		this.types = types;
		this.owners = owners;
	}

	public Pets(int id, Types types, Owners owners, String name,
			Date birthDate, Set<Visits> visitses) {
		this.id = id;
		this.types = types;
		this.owners = owners;
		this.name = name;
		this.birthDate = birthDate;
		this.visitses = visitses;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TYPE_ID", nullable = false)
	public Types getTypes() {
		return this.types;
	}

	public void setTypes(Types types) {
		this.types = types;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "OWNER_ID", nullable = false)
	public Owners getOwners() {
		return this.owners;
	}

	public void setOwners(Owners owners) {
		this.owners = owners;
	}

	@Column(name = "NAME", length = 30)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "BIRTH_DATE", length = 0)
	public Date getBirthDate() {
		return this.birthDate;
	}

	public void setBirthDate(Date birthDate) {
		this.birthDate = birthDate;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "pets")	
	public Set<Visits> getVisitses() {
		return this.visitses;
	}

	public void setVisitses(Set<Visits> visitses) {
		this.visitses = visitses;
	}

}
